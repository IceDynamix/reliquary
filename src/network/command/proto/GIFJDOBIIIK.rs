// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `GIFJDOBIIIK.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:GIFJDOBIIIK)
pub enum GIFJDOBIIIK {
    // @@protoc_insertion_point(enum_value:GIFJDOBIIIK.GROWTH_TARGET_AVATAR_NONE)
    GROWTH_TARGET_AVATAR_NONE = 0,
    // @@protoc_insertion_point(enum_value:GIFJDOBIIIK.GROWTH_TARGET_AVATAR_PRE)
    GROWTH_TARGET_AVATAR_PRE = 1,
    // @@protoc_insertion_point(enum_value:GIFJDOBIIIK.GROWTH_TARGET_AVATAR_UP)
    GROWTH_TARGET_AVATAR_UP = 2,
    // @@protoc_insertion_point(enum_value:GIFJDOBIIIK.GROWTH_TARGET_AVATAR_LOCK)
    GROWTH_TARGET_AVATAR_LOCK = 3,
    // @@protoc_insertion_point(enum_value:GIFJDOBIIIK.GROWTH_TARGET_AVATAR_UNLOCK)
    GROWTH_TARGET_AVATAR_UNLOCK = 4,
    // @@protoc_insertion_point(enum_value:GIFJDOBIIIK.GROWTH_TARGET_AVATAR_LOCK_AND_UP)
    GROWTH_TARGET_AVATAR_LOCK_AND_UP = 5,
}

impl ::protobuf::Enum for GIFJDOBIIIK {
    const NAME: &'static str = "GIFJDOBIIIK";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<GIFJDOBIIIK> {
        match value {
            0 => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_NONE),
            1 => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_PRE),
            2 => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_UP),
            3 => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_LOCK),
            4 => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_UNLOCK),
            5 => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_LOCK_AND_UP),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<GIFJDOBIIIK> {
        match str {
            "GROWTH_TARGET_AVATAR_NONE" => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_NONE),
            "GROWTH_TARGET_AVATAR_PRE" => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_PRE),
            "GROWTH_TARGET_AVATAR_UP" => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_UP),
            "GROWTH_TARGET_AVATAR_LOCK" => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_LOCK),
            "GROWTH_TARGET_AVATAR_UNLOCK" => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_UNLOCK),
            "GROWTH_TARGET_AVATAR_LOCK_AND_UP" => ::std::option::Option::Some(GIFJDOBIIIK::GROWTH_TARGET_AVATAR_LOCK_AND_UP),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [GIFJDOBIIIK] = &[
        GIFJDOBIIIK::GROWTH_TARGET_AVATAR_NONE,
        GIFJDOBIIIK::GROWTH_TARGET_AVATAR_PRE,
        GIFJDOBIIIK::GROWTH_TARGET_AVATAR_UP,
        GIFJDOBIIIK::GROWTH_TARGET_AVATAR_LOCK,
        GIFJDOBIIIK::GROWTH_TARGET_AVATAR_UNLOCK,
        GIFJDOBIIIK::GROWTH_TARGET_AVATAR_LOCK_AND_UP,
    ];
}

impl ::protobuf::EnumFull for GIFJDOBIIIK {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("GIFJDOBIIIK").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = *self as usize;
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for GIFJDOBIIIK {
    fn default() -> Self {
        GIFJDOBIIIK::GROWTH_TARGET_AVATAR_NONE
    }
}

impl GIFJDOBIIIK {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<GIFJDOBIIIK>("GIFJDOBIIIK")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11GIFJDOBIIIK.proto*\xcd\x01\n\x0bGIFJDOBIIIK\x12\x1d\n\x19GROWTH_TA\
    RGET_AVATAR_NONE\x10\0\x12\x1c\n\x18GROWTH_TARGET_AVATAR_PRE\x10\x01\x12\
    \x1b\n\x17GROWTH_TARGET_AVATAR_UP\x10\x02\x12\x1d\n\x19GROWTH_TARGET_AVA\
    TAR_LOCK\x10\x03\x12\x1f\n\x1bGROWTH_TARGET_AVATAR_UNLOCK\x10\x04\x12$\n\
    \x20GROWTH_TARGET_AVATAR_LOCK_AND_UP\x10\x05b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(GIFJDOBIIIK::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
