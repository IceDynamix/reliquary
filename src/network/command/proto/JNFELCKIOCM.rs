// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `JNFELCKIOCM.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:JNFELCKIOCM)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct JNFELCKIOCM {
    // message fields
    // @@protoc_insertion_point(field:JNFELCKIOCM.PBLFLJNHMIL)
    pub PBLFLJNHMIL: ::protobuf::EnumOrUnknown<super::RogueStatus::RogueStatus>,
    // @@protoc_insertion_point(field:JNFELCKIOCM.JLNILIJOMEM)
    pub JLNILIJOMEM: ::protobuf::MessageField<super::AJPFPHKKLPG::AJPFPHKKLPG>,
    // @@protoc_insertion_point(field:JNFELCKIOCM.LGHCAHBBCAM)
    pub LGHCAHBBCAM: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:JNFELCKIOCM.NBCGLEFOKDM)
    pub NBCGLEFOKDM: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:JNFELCKIOCM.KGMEHNAOJMC)
    pub KGMEHNAOJMC: u32,
    // @@protoc_insertion_point(field:JNFELCKIOCM.LCHKKHNGBGJ)
    pub LCHKKHNGBGJ: ::protobuf::MessageField<super::GCKBLHADLGN::GCKBLHADLGN>,
    // @@protoc_insertion_point(field:JNFELCKIOCM.KJGIMHFKGBN)
    pub KJGIMHFKGBN: u32,
    // @@protoc_insertion_point(field:JNFELCKIOCM.FFKPEGNBHOD)
    pub FFKPEGNBHOD: u32,
    // @@protoc_insertion_point(field:JNFELCKIOCM.GMPIIAEGGEK)
    pub GMPIIAEGGEK: u32,
    // special fields
    // @@protoc_insertion_point(special_field:JNFELCKIOCM.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a JNFELCKIOCM {
    fn default() -> &'a JNFELCKIOCM {
        <JNFELCKIOCM as ::protobuf::Message>::default_instance()
    }
}

impl JNFELCKIOCM {
    pub fn new() -> JNFELCKIOCM {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(9);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PBLFLJNHMIL",
            |m: &JNFELCKIOCM| { &m.PBLFLJNHMIL },
            |m: &mut JNFELCKIOCM| { &mut m.PBLFLJNHMIL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::AJPFPHKKLPG::AJPFPHKKLPG>(
            "JLNILIJOMEM",
            |m: &JNFELCKIOCM| { &m.JLNILIJOMEM },
            |m: &mut JNFELCKIOCM| { &mut m.JLNILIJOMEM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "LGHCAHBBCAM",
            |m: &JNFELCKIOCM| { &m.LGHCAHBBCAM },
            |m: &mut JNFELCKIOCM| { &mut m.LGHCAHBBCAM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "NBCGLEFOKDM",
            |m: &JNFELCKIOCM| { &m.NBCGLEFOKDM },
            |m: &mut JNFELCKIOCM| { &mut m.NBCGLEFOKDM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KGMEHNAOJMC",
            |m: &JNFELCKIOCM| { &m.KGMEHNAOJMC },
            |m: &mut JNFELCKIOCM| { &mut m.KGMEHNAOJMC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::GCKBLHADLGN::GCKBLHADLGN>(
            "LCHKKHNGBGJ",
            |m: &JNFELCKIOCM| { &m.LCHKKHNGBGJ },
            |m: &mut JNFELCKIOCM| { &mut m.LCHKKHNGBGJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KJGIMHFKGBN",
            |m: &JNFELCKIOCM| { &m.KJGIMHFKGBN },
            |m: &mut JNFELCKIOCM| { &mut m.KJGIMHFKGBN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FFKPEGNBHOD",
            |m: &JNFELCKIOCM| { &m.FFKPEGNBHOD },
            |m: &mut JNFELCKIOCM| { &mut m.FFKPEGNBHOD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GMPIIAEGGEK",
            |m: &JNFELCKIOCM| { &m.GMPIIAEGGEK },
            |m: &mut JNFELCKIOCM| { &mut m.GMPIIAEGGEK },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<JNFELCKIOCM>(
            "JNFELCKIOCM",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for JNFELCKIOCM {
    const NAME: &'static str = "JNFELCKIOCM";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                120 => {
                    self.PBLFLJNHMIL = is.read_enum_or_unknown()?;
                },
                58 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.JLNILIJOMEM)?;
                },
                18 => {
                    is.read_repeated_packed_uint32_into(&mut self.LGHCAHBBCAM)?;
                },
                16 => {
                    self.LGHCAHBBCAM.push(is.read_uint32()?);
                },
                10 => {
                    is.read_repeated_packed_uint32_into(&mut self.NBCGLEFOKDM)?;
                },
                8 => {
                    self.NBCGLEFOKDM.push(is.read_uint32()?);
                },
                72 => {
                    self.KGMEHNAOJMC = is.read_uint32()?;
                },
                66 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LCHKKHNGBGJ)?;
                },
                112 => {
                    self.KJGIMHFKGBN = is.read_uint32()?;
                },
                88 => {
                    self.FFKPEGNBHOD = is.read_uint32()?;
                },
                80 => {
                    self.GMPIIAEGGEK = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.PBLFLJNHMIL != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            my_size += ::protobuf::rt::int32_size(15, self.PBLFLJNHMIL.value());
        }
        if let Some(v) = self.JLNILIJOMEM.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::vec_packed_uint32_size(2, &self.LGHCAHBBCAM);
        my_size += ::protobuf::rt::vec_packed_uint32_size(1, &self.NBCGLEFOKDM);
        if self.KGMEHNAOJMC != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.KGMEHNAOJMC);
        }
        if let Some(v) = self.LCHKKHNGBGJ.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.KJGIMHFKGBN != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.KJGIMHFKGBN);
        }
        if self.FFKPEGNBHOD != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.FFKPEGNBHOD);
        }
        if self.GMPIIAEGGEK != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.GMPIIAEGGEK);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.PBLFLJNHMIL != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            os.write_enum(15, ::protobuf::EnumOrUnknown::value(&self.PBLFLJNHMIL))?;
        }
        if let Some(v) = self.JLNILIJOMEM.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        }
        os.write_repeated_packed_uint32(2, &self.LGHCAHBBCAM)?;
        os.write_repeated_packed_uint32(1, &self.NBCGLEFOKDM)?;
        if self.KGMEHNAOJMC != 0 {
            os.write_uint32(9, self.KGMEHNAOJMC)?;
        }
        if let Some(v) = self.LCHKKHNGBGJ.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        }
        if self.KJGIMHFKGBN != 0 {
            os.write_uint32(14, self.KJGIMHFKGBN)?;
        }
        if self.FFKPEGNBHOD != 0 {
            os.write_uint32(11, self.FFKPEGNBHOD)?;
        }
        if self.GMPIIAEGGEK != 0 {
            os.write_uint32(10, self.GMPIIAEGGEK)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> JNFELCKIOCM {
        JNFELCKIOCM::new()
    }

    fn clear(&mut self) {
        self.PBLFLJNHMIL = ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE);
        self.JLNILIJOMEM.clear();
        self.LGHCAHBBCAM.clear();
        self.NBCGLEFOKDM.clear();
        self.KGMEHNAOJMC = 0;
        self.LCHKKHNGBGJ.clear();
        self.KJGIMHFKGBN = 0;
        self.FFKPEGNBHOD = 0;
        self.GMPIIAEGGEK = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static JNFELCKIOCM {
        static instance: JNFELCKIOCM = JNFELCKIOCM {
            PBLFLJNHMIL: ::protobuf::EnumOrUnknown::from_i32(0),
            JLNILIJOMEM: ::protobuf::MessageField::none(),
            LGHCAHBBCAM: ::std::vec::Vec::new(),
            NBCGLEFOKDM: ::std::vec::Vec::new(),
            KGMEHNAOJMC: 0,
            LCHKKHNGBGJ: ::protobuf::MessageField::none(),
            KJGIMHFKGBN: 0,
            FFKPEGNBHOD: 0,
            GMPIIAEGGEK: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for JNFELCKIOCM {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("JNFELCKIOCM").unwrap()).clone()
    }
}

impl ::std::fmt::Display for JNFELCKIOCM {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for JNFELCKIOCM {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11JNFELCKIOCM.proto\x1a\x11AJPFPHKKLPG.proto\x1a\x11GCKBLHADLGN.prot\
    o\x1a\x11RogueStatus.proto\"\xe9\x02\n\x0bJNFELCKIOCM\x12.\n\x0bPBLFLJNH\
    MIL\x18\x0f\x20\x01(\x0e2\x0c.RogueStatusR\x0bPBLFLJNHMIL\x12.\n\x0bJLNI\
    LIJOMEM\x18\x07\x20\x01(\x0b2\x0c.AJPFPHKKLPGR\x0bJLNILIJOMEM\x12\x20\n\
    \x0bLGHCAHBBCAM\x18\x02\x20\x03(\rR\x0bLGHCAHBBCAM\x12\x20\n\x0bNBCGLEFO\
    KDM\x18\x01\x20\x03(\rR\x0bNBCGLEFOKDM\x12\x20\n\x0bKGMEHNAOJMC\x18\t\
    \x20\x01(\rR\x0bKGMEHNAOJMC\x12.\n\x0bLCHKKHNGBGJ\x18\x08\x20\x01(\x0b2\
    \x0c.GCKBLHADLGNR\x0bLCHKKHNGBGJ\x12\x20\n\x0bKJGIMHFKGBN\x18\x0e\x20\
    \x01(\rR\x0bKJGIMHFKGBN\x12\x20\n\x0bFFKPEGNBHOD\x18\x0b\x20\x01(\rR\x0b\
    FFKPEGNBHOD\x12\x20\n\x0bGMPIIAEGGEK\x18\n\x20\x01(\rR\x0bGMPIIAEGGEKb\
    \x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(3);
            deps.push(super::AJPFPHKKLPG::file_descriptor().clone());
            deps.push(super::GCKBLHADLGN::file_descriptor().clone());
            deps.push(super::RogueStatus::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(JNFELCKIOCM::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
