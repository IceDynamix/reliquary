// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdLobbyType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdLobbyType)
pub enum CmdLobbyType {
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyTypeNone)
    CmdLobbyTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyInviteCsReq)
    CmdLobbyInviteCsReq = 7352,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyGetInfoScRsp)
    CmdLobbyGetInfoScRsp = 7360,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyModifyPlayerInfoCsReq)
    CmdLobbyModifyPlayerInfoCsReq = 7357,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyKickOutCsReq)
    CmdLobbyKickOutCsReq = 7375,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyBeginScRsp)
    CmdLobbyBeginScRsp = 7383,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyCreateScRsp)
    CmdLobbyCreateScRsp = 7387,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyQuitScRsp)
    CmdLobbyQuitScRsp = 7382,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyCreateCsReq)
    CmdLobbyCreateCsReq = 7376,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyBeginCsReq)
    CmdLobbyBeginCsReq = 7356,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyJoinCsReq)
    CmdLobbyJoinCsReq = 7391,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyQuitCsReq)
    CmdLobbyQuitCsReq = 7354,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyModifyPlayerInfoScRsp)
    CmdLobbyModifyPlayerInfoScRsp = 7379,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbySyncInfoScNotify)
    CmdLobbySyncInfoScNotify = 7380,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyInviteScNotify)
    CmdLobbyInviteScNotify = 7364,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyJoinScRsp)
    CmdLobbyJoinScRsp = 7393,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyGetInfoCsReq)
    CmdLobbyGetInfoCsReq = 7390,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyInviteScRsp)
    CmdLobbyInviteScRsp = 7398,
    // @@protoc_insertion_point(enum_value:CmdLobbyType.CmdLobbyKickOutScRsp)
    CmdLobbyKickOutScRsp = 7365,
}

impl ::protobuf::Enum for CmdLobbyType {
    const NAME: &'static str = "CmdLobbyType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdLobbyType> {
        match value {
            0 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyTypeNone),
            7352 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyInviteCsReq),
            7360 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyGetInfoScRsp),
            7357 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyModifyPlayerInfoCsReq),
            7375 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyKickOutCsReq),
            7383 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyBeginScRsp),
            7387 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyCreateScRsp),
            7382 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyQuitScRsp),
            7376 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyCreateCsReq),
            7356 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyBeginCsReq),
            7391 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyJoinCsReq),
            7354 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyQuitCsReq),
            7379 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyModifyPlayerInfoScRsp),
            7380 => ::std::option::Option::Some(CmdLobbyType::CmdLobbySyncInfoScNotify),
            7364 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyInviteScNotify),
            7393 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyJoinScRsp),
            7390 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyGetInfoCsReq),
            7398 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyInviteScRsp),
            7365 => ::std::option::Option::Some(CmdLobbyType::CmdLobbyKickOutScRsp),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdLobbyType> {
        match str {
            "CmdLobbyTypeNone" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyTypeNone),
            "CmdLobbyInviteCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyInviteCsReq),
            "CmdLobbyGetInfoScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyGetInfoScRsp),
            "CmdLobbyModifyPlayerInfoCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyModifyPlayerInfoCsReq),
            "CmdLobbyKickOutCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyKickOutCsReq),
            "CmdLobbyBeginScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyBeginScRsp),
            "CmdLobbyCreateScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyCreateScRsp),
            "CmdLobbyQuitScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyQuitScRsp),
            "CmdLobbyCreateCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyCreateCsReq),
            "CmdLobbyBeginCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyBeginCsReq),
            "CmdLobbyJoinCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyJoinCsReq),
            "CmdLobbyQuitCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyQuitCsReq),
            "CmdLobbyModifyPlayerInfoScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyModifyPlayerInfoScRsp),
            "CmdLobbySyncInfoScNotify" => ::std::option::Option::Some(CmdLobbyType::CmdLobbySyncInfoScNotify),
            "CmdLobbyInviteScNotify" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyInviteScNotify),
            "CmdLobbyJoinScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyJoinScRsp),
            "CmdLobbyGetInfoCsReq" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyGetInfoCsReq),
            "CmdLobbyInviteScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyInviteScRsp),
            "CmdLobbyKickOutScRsp" => ::std::option::Option::Some(CmdLobbyType::CmdLobbyKickOutScRsp),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdLobbyType] = &[
        CmdLobbyType::CmdLobbyTypeNone,
        CmdLobbyType::CmdLobbyInviteCsReq,
        CmdLobbyType::CmdLobbyGetInfoScRsp,
        CmdLobbyType::CmdLobbyModifyPlayerInfoCsReq,
        CmdLobbyType::CmdLobbyKickOutCsReq,
        CmdLobbyType::CmdLobbyBeginScRsp,
        CmdLobbyType::CmdLobbyCreateScRsp,
        CmdLobbyType::CmdLobbyQuitScRsp,
        CmdLobbyType::CmdLobbyCreateCsReq,
        CmdLobbyType::CmdLobbyBeginCsReq,
        CmdLobbyType::CmdLobbyJoinCsReq,
        CmdLobbyType::CmdLobbyQuitCsReq,
        CmdLobbyType::CmdLobbyModifyPlayerInfoScRsp,
        CmdLobbyType::CmdLobbySyncInfoScNotify,
        CmdLobbyType::CmdLobbyInviteScNotify,
        CmdLobbyType::CmdLobbyJoinScRsp,
        CmdLobbyType::CmdLobbyGetInfoCsReq,
        CmdLobbyType::CmdLobbyInviteScRsp,
        CmdLobbyType::CmdLobbyKickOutScRsp,
    ];
}

impl ::protobuf::EnumFull for CmdLobbyType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdLobbyType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdLobbyType::CmdLobbyTypeNone => 0,
            CmdLobbyType::CmdLobbyInviteCsReq => 1,
            CmdLobbyType::CmdLobbyGetInfoScRsp => 2,
            CmdLobbyType::CmdLobbyModifyPlayerInfoCsReq => 3,
            CmdLobbyType::CmdLobbyKickOutCsReq => 4,
            CmdLobbyType::CmdLobbyBeginScRsp => 5,
            CmdLobbyType::CmdLobbyCreateScRsp => 6,
            CmdLobbyType::CmdLobbyQuitScRsp => 7,
            CmdLobbyType::CmdLobbyCreateCsReq => 8,
            CmdLobbyType::CmdLobbyBeginCsReq => 9,
            CmdLobbyType::CmdLobbyJoinCsReq => 10,
            CmdLobbyType::CmdLobbyQuitCsReq => 11,
            CmdLobbyType::CmdLobbyModifyPlayerInfoScRsp => 12,
            CmdLobbyType::CmdLobbySyncInfoScNotify => 13,
            CmdLobbyType::CmdLobbyInviteScNotify => 14,
            CmdLobbyType::CmdLobbyJoinScRsp => 15,
            CmdLobbyType::CmdLobbyGetInfoCsReq => 16,
            CmdLobbyType::CmdLobbyInviteScRsp => 17,
            CmdLobbyType::CmdLobbyKickOutScRsp => 18,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdLobbyType {
    fn default() -> Self {
        CmdLobbyType::CmdLobbyTypeNone
    }
}

impl CmdLobbyType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdLobbyType>("CmdLobbyType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x12CmdLobbyType.proto*\x8e\x04\n\x0cCmdLobbyType\x12\x14\n\x10CmdLobb\
    yTypeNone\x10\0\x12\x18\n\x13CmdLobbyInviteCsReq\x10\xb89\x12\x19\n\x14C\
    mdLobbyGetInfoScRsp\x10\xc09\x12\"\n\x1dCmdLobbyModifyPlayerInfoCsReq\
    \x10\xbd9\x12\x19\n\x14CmdLobbyKickOutCsReq\x10\xcf9\x12\x17\n\x12CmdLob\
    byBeginScRsp\x10\xd79\x12\x18\n\x13CmdLobbyCreateScRsp\x10\xdb9\x12\x16\
    \n\x11CmdLobbyQuitScRsp\x10\xd69\x12\x18\n\x13CmdLobbyCreateCsReq\x10\
    \xd09\x12\x17\n\x12CmdLobbyBeginCsReq\x10\xbc9\x12\x16\n\x11CmdLobbyJoin\
    CsReq\x10\xdf9\x12\x16\n\x11CmdLobbyQuitCsReq\x10\xba9\x12\"\n\x1dCmdLob\
    byModifyPlayerInfoScRsp\x10\xd39\x12\x1d\n\x18CmdLobbySyncInfoScNotify\
    \x10\xd49\x12\x1b\n\x16CmdLobbyInviteScNotify\x10\xc49\x12\x16\n\x11CmdL\
    obbyJoinScRsp\x10\xe19\x12\x19\n\x14CmdLobbyGetInfoCsReq\x10\xde9\x12\
    \x18\n\x13CmdLobbyInviteScRsp\x10\xe69\x12\x19\n\x14CmdLobbyKickOutScRsp\
    \x10\xc59b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdLobbyType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
