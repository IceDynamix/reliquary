// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `StrongChallengeActivityBattleEndScNotify.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:StrongChallengeActivityBattleEndScNotify)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct StrongChallengeActivityBattleEndScNotify {
    // message fields
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.DLGFLNPHEJH)
    pub DLGFLNPHEJH: u32,
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.AHJFPNGDBDO)
    pub AHJFPNGDBDO: u32,
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.HCDFGHDALCM)
    pub HCDFGHDALCM: ::protobuf::EnumOrUnknown<super::MPEBBEINPDA::MPEBBEINPDA>,
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.GGBECCHPHCD)
    pub GGBECCHPHCD: u32,
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.ABLICGMCINN)
    pub ABLICGMCINN: u32,
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.CFONLBPOABP)
    pub CFONLBPOABP: u32,
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.JAMLOKNCAKC)
    pub JAMLOKNCAKC: u32,
    // @@protoc_insertion_point(field:StrongChallengeActivityBattleEndScNotify.DNPHCJEBIKB)
    pub DNPHCJEBIKB: u32,
    // special fields
    // @@protoc_insertion_point(special_field:StrongChallengeActivityBattleEndScNotify.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a StrongChallengeActivityBattleEndScNotify {
    fn default() -> &'a StrongChallengeActivityBattleEndScNotify {
        <StrongChallengeActivityBattleEndScNotify as ::protobuf::Message>::default_instance()
    }
}

impl StrongChallengeActivityBattleEndScNotify {
    pub fn new() -> StrongChallengeActivityBattleEndScNotify {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(8);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DLGFLNPHEJH",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.DLGFLNPHEJH },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.DLGFLNPHEJH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AHJFPNGDBDO",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.AHJFPNGDBDO },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.AHJFPNGDBDO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HCDFGHDALCM",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.HCDFGHDALCM },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.HCDFGHDALCM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GGBECCHPHCD",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.GGBECCHPHCD },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.GGBECCHPHCD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ABLICGMCINN",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.ABLICGMCINN },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.ABLICGMCINN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CFONLBPOABP",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.CFONLBPOABP },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.CFONLBPOABP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JAMLOKNCAKC",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.JAMLOKNCAKC },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.JAMLOKNCAKC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DNPHCJEBIKB",
            |m: &StrongChallengeActivityBattleEndScNotify| { &m.DNPHCJEBIKB },
            |m: &mut StrongChallengeActivityBattleEndScNotify| { &mut m.DNPHCJEBIKB },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<StrongChallengeActivityBattleEndScNotify>(
            "StrongChallengeActivityBattleEndScNotify",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for StrongChallengeActivityBattleEndScNotify {
    const NAME: &'static str = "StrongChallengeActivityBattleEndScNotify";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                40 => {
                    self.DLGFLNPHEJH = is.read_uint32()?;
                },
                88 => {
                    self.AHJFPNGDBDO = is.read_uint32()?;
                },
                8 => {
                    self.HCDFGHDALCM = is.read_enum_or_unknown()?;
                },
                104 => {
                    self.GGBECCHPHCD = is.read_uint32()?;
                },
                112 => {
                    self.ABLICGMCINN = is.read_uint32()?;
                },
                64 => {
                    self.CFONLBPOABP = is.read_uint32()?;
                },
                32 => {
                    self.JAMLOKNCAKC = is.read_uint32()?;
                },
                24 => {
                    self.DNPHCJEBIKB = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.DLGFLNPHEJH != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.DLGFLNPHEJH);
        }
        if self.AHJFPNGDBDO != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.AHJFPNGDBDO);
        }
        if self.HCDFGHDALCM != ::protobuf::EnumOrUnknown::new(super::MPEBBEINPDA::MPEBBEINPDA::BATTLE_END_NONE) {
            my_size += ::protobuf::rt::int32_size(1, self.HCDFGHDALCM.value());
        }
        if self.GGBECCHPHCD != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.GGBECCHPHCD);
        }
        if self.ABLICGMCINN != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.ABLICGMCINN);
        }
        if self.CFONLBPOABP != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.CFONLBPOABP);
        }
        if self.JAMLOKNCAKC != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.JAMLOKNCAKC);
        }
        if self.DNPHCJEBIKB != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.DNPHCJEBIKB);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.DLGFLNPHEJH != 0 {
            os.write_uint32(5, self.DLGFLNPHEJH)?;
        }
        if self.AHJFPNGDBDO != 0 {
            os.write_uint32(11, self.AHJFPNGDBDO)?;
        }
        if self.HCDFGHDALCM != ::protobuf::EnumOrUnknown::new(super::MPEBBEINPDA::MPEBBEINPDA::BATTLE_END_NONE) {
            os.write_enum(1, ::protobuf::EnumOrUnknown::value(&self.HCDFGHDALCM))?;
        }
        if self.GGBECCHPHCD != 0 {
            os.write_uint32(13, self.GGBECCHPHCD)?;
        }
        if self.ABLICGMCINN != 0 {
            os.write_uint32(14, self.ABLICGMCINN)?;
        }
        if self.CFONLBPOABP != 0 {
            os.write_uint32(8, self.CFONLBPOABP)?;
        }
        if self.JAMLOKNCAKC != 0 {
            os.write_uint32(4, self.JAMLOKNCAKC)?;
        }
        if self.DNPHCJEBIKB != 0 {
            os.write_uint32(3, self.DNPHCJEBIKB)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> StrongChallengeActivityBattleEndScNotify {
        StrongChallengeActivityBattleEndScNotify::new()
    }

    fn clear(&mut self) {
        self.DLGFLNPHEJH = 0;
        self.AHJFPNGDBDO = 0;
        self.HCDFGHDALCM = ::protobuf::EnumOrUnknown::new(super::MPEBBEINPDA::MPEBBEINPDA::BATTLE_END_NONE);
        self.GGBECCHPHCD = 0;
        self.ABLICGMCINN = 0;
        self.CFONLBPOABP = 0;
        self.JAMLOKNCAKC = 0;
        self.DNPHCJEBIKB = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static StrongChallengeActivityBattleEndScNotify {
        static instance: StrongChallengeActivityBattleEndScNotify = StrongChallengeActivityBattleEndScNotify {
            DLGFLNPHEJH: 0,
            AHJFPNGDBDO: 0,
            HCDFGHDALCM: ::protobuf::EnumOrUnknown::from_i32(0),
            GGBECCHPHCD: 0,
            ABLICGMCINN: 0,
            CFONLBPOABP: 0,
            JAMLOKNCAKC: 0,
            DNPHCJEBIKB: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for StrongChallengeActivityBattleEndScNotify {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("StrongChallengeActivityBattleEndScNotify").unwrap()).clone()
    }
}

impl ::std::fmt::Display for StrongChallengeActivityBattleEndScNotify {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for StrongChallengeActivityBattleEndScNotify {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n.StrongChallengeActivityBattleEndScNotify.proto\x1a\x11MPEBBEINPDA.pro\
    to\"\xc8\x02\n(StrongChallengeActivityBattleEndScNotify\x12\x20\n\x0bDLG\
    FLNPHEJH\x18\x05\x20\x01(\rR\x0bDLGFLNPHEJH\x12\x20\n\x0bAHJFPNGDBDO\x18\
    \x0b\x20\x01(\rR\x0bAHJFPNGDBDO\x12.\n\x0bHCDFGHDALCM\x18\x01\x20\x01(\
    \x0e2\x0c.MPEBBEINPDAR\x0bHCDFGHDALCM\x12\x20\n\x0bGGBECCHPHCD\x18\r\x20\
    \x01(\rR\x0bGGBECCHPHCD\x12\x20\n\x0bABLICGMCINN\x18\x0e\x20\x01(\rR\x0b\
    ABLICGMCINN\x12\x20\n\x0bCFONLBPOABP\x18\x08\x20\x01(\rR\x0bCFONLBPOABP\
    \x12\x20\n\x0bJAMLOKNCAKC\x18\x04\x20\x01(\rR\x0bJAMLOKNCAKC\x12\x20\n\
    \x0bDNPHCJEBIKB\x18\x03\x20\x01(\rR\x0bDNPHCJEBIKBb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(1);
            deps.push(super::MPEBBEINPDA::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(StrongChallengeActivityBattleEndScNotify::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
