// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `AEDKPBFCKGO.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:AEDKPBFCKGO)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct AEDKPBFCKGO {
    // message fields
    // @@protoc_insertion_point(field:AEDKPBFCKGO.EFINFPKKJLE)
    pub EFINFPKKJLE: u32,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.IMOBLGOAJCB)
    pub IMOBLGOAJCB: bool,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.FNIGPGBGEHN)
    pub FNIGPGBGEHN: u32,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.PDDNGKNCPEB)
    pub PDDNGKNCPEB: u32,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.KMGIEMOFOGB)
    pub KMGIEMOFOGB: u32,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.PILAAGOKAOF)
    pub PILAAGOKAOF: u32,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.PKDLKCBKKPF)
    pub PKDLKCBKKPF: u32,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.GIMDHBNJOOO)
    pub GIMDHBNJOOO: u32,
    // @@protoc_insertion_point(field:AEDKPBFCKGO.IFKDGEBCDEG)
    pub IFKDGEBCDEG: u32,
    // special fields
    // @@protoc_insertion_point(special_field:AEDKPBFCKGO.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a AEDKPBFCKGO {
    fn default() -> &'a AEDKPBFCKGO {
        <AEDKPBFCKGO as ::protobuf::Message>::default_instance()
    }
}

impl AEDKPBFCKGO {
    pub fn new() -> AEDKPBFCKGO {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(9);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EFINFPKKJLE",
            |m: &AEDKPBFCKGO| { &m.EFINFPKKJLE },
            |m: &mut AEDKPBFCKGO| { &mut m.EFINFPKKJLE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IMOBLGOAJCB",
            |m: &AEDKPBFCKGO| { &m.IMOBLGOAJCB },
            |m: &mut AEDKPBFCKGO| { &mut m.IMOBLGOAJCB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FNIGPGBGEHN",
            |m: &AEDKPBFCKGO| { &m.FNIGPGBGEHN },
            |m: &mut AEDKPBFCKGO| { &mut m.FNIGPGBGEHN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PDDNGKNCPEB",
            |m: &AEDKPBFCKGO| { &m.PDDNGKNCPEB },
            |m: &mut AEDKPBFCKGO| { &mut m.PDDNGKNCPEB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KMGIEMOFOGB",
            |m: &AEDKPBFCKGO| { &m.KMGIEMOFOGB },
            |m: &mut AEDKPBFCKGO| { &mut m.KMGIEMOFOGB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PILAAGOKAOF",
            |m: &AEDKPBFCKGO| { &m.PILAAGOKAOF },
            |m: &mut AEDKPBFCKGO| { &mut m.PILAAGOKAOF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PKDLKCBKKPF",
            |m: &AEDKPBFCKGO| { &m.PKDLKCBKKPF },
            |m: &mut AEDKPBFCKGO| { &mut m.PKDLKCBKKPF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GIMDHBNJOOO",
            |m: &AEDKPBFCKGO| { &m.GIMDHBNJOOO },
            |m: &mut AEDKPBFCKGO| { &mut m.GIMDHBNJOOO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IFKDGEBCDEG",
            |m: &AEDKPBFCKGO| { &m.IFKDGEBCDEG },
            |m: &mut AEDKPBFCKGO| { &mut m.IFKDGEBCDEG },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<AEDKPBFCKGO>(
            "AEDKPBFCKGO",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for AEDKPBFCKGO {
    const NAME: &'static str = "AEDKPBFCKGO";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                16 => {
                    self.EFINFPKKJLE = is.read_uint32()?;
                },
                8 => {
                    self.IMOBLGOAJCB = is.read_bool()?;
                },
                96 => {
                    self.FNIGPGBGEHN = is.read_uint32()?;
                },
                48 => {
                    self.PDDNGKNCPEB = is.read_uint32()?;
                },
                24 => {
                    self.KMGIEMOFOGB = is.read_uint32()?;
                },
                56 => {
                    self.PILAAGOKAOF = is.read_uint32()?;
                },
                120 => {
                    self.PKDLKCBKKPF = is.read_uint32()?;
                },
                104 => {
                    self.GIMDHBNJOOO = is.read_uint32()?;
                },
                64 => {
                    self.IFKDGEBCDEG = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.EFINFPKKJLE != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.EFINFPKKJLE);
        }
        if self.IMOBLGOAJCB != false {
            my_size += 1 + 1;
        }
        if self.FNIGPGBGEHN != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.FNIGPGBGEHN);
        }
        if self.PDDNGKNCPEB != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.PDDNGKNCPEB);
        }
        if self.KMGIEMOFOGB != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.KMGIEMOFOGB);
        }
        if self.PILAAGOKAOF != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.PILAAGOKAOF);
        }
        if self.PKDLKCBKKPF != 0 {
            my_size += ::protobuf::rt::uint32_size(15, self.PKDLKCBKKPF);
        }
        if self.GIMDHBNJOOO != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.GIMDHBNJOOO);
        }
        if self.IFKDGEBCDEG != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.IFKDGEBCDEG);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.EFINFPKKJLE != 0 {
            os.write_uint32(2, self.EFINFPKKJLE)?;
        }
        if self.IMOBLGOAJCB != false {
            os.write_bool(1, self.IMOBLGOAJCB)?;
        }
        if self.FNIGPGBGEHN != 0 {
            os.write_uint32(12, self.FNIGPGBGEHN)?;
        }
        if self.PDDNGKNCPEB != 0 {
            os.write_uint32(6, self.PDDNGKNCPEB)?;
        }
        if self.KMGIEMOFOGB != 0 {
            os.write_uint32(3, self.KMGIEMOFOGB)?;
        }
        if self.PILAAGOKAOF != 0 {
            os.write_uint32(7, self.PILAAGOKAOF)?;
        }
        if self.PKDLKCBKKPF != 0 {
            os.write_uint32(15, self.PKDLKCBKKPF)?;
        }
        if self.GIMDHBNJOOO != 0 {
            os.write_uint32(13, self.GIMDHBNJOOO)?;
        }
        if self.IFKDGEBCDEG != 0 {
            os.write_uint32(8, self.IFKDGEBCDEG)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> AEDKPBFCKGO {
        AEDKPBFCKGO::new()
    }

    fn clear(&mut self) {
        self.EFINFPKKJLE = 0;
        self.IMOBLGOAJCB = false;
        self.FNIGPGBGEHN = 0;
        self.PDDNGKNCPEB = 0;
        self.KMGIEMOFOGB = 0;
        self.PILAAGOKAOF = 0;
        self.PKDLKCBKKPF = 0;
        self.GIMDHBNJOOO = 0;
        self.IFKDGEBCDEG = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static AEDKPBFCKGO {
        static instance: AEDKPBFCKGO = AEDKPBFCKGO {
            EFINFPKKJLE: 0,
            IMOBLGOAJCB: false,
            FNIGPGBGEHN: 0,
            PDDNGKNCPEB: 0,
            KMGIEMOFOGB: 0,
            PILAAGOKAOF: 0,
            PKDLKCBKKPF: 0,
            GIMDHBNJOOO: 0,
            IFKDGEBCDEG: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for AEDKPBFCKGO {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("AEDKPBFCKGO").unwrap()).clone()
    }
}

impl ::std::fmt::Display for AEDKPBFCKGO {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for AEDKPBFCKGO {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11AEDKPBFCKGO.proto\"\xbf\x02\n\x0bAEDKPBFCKGO\x12\x20\n\x0bEFINFPKK\
    JLE\x18\x02\x20\x01(\rR\x0bEFINFPKKJLE\x12\x20\n\x0bIMOBLGOAJCB\x18\x01\
    \x20\x01(\x08R\x0bIMOBLGOAJCB\x12\x20\n\x0bFNIGPGBGEHN\x18\x0c\x20\x01(\
    \rR\x0bFNIGPGBGEHN\x12\x20\n\x0bPDDNGKNCPEB\x18\x06\x20\x01(\rR\x0bPDDNG\
    KNCPEB\x12\x20\n\x0bKMGIEMOFOGB\x18\x03\x20\x01(\rR\x0bKMGIEMOFOGB\x12\
    \x20\n\x0bPILAAGOKAOF\x18\x07\x20\x01(\rR\x0bPILAAGOKAOF\x12\x20\n\x0bPK\
    DLKCBKKPF\x18\x0f\x20\x01(\rR\x0bPKDLKCBKKPF\x12\x20\n\x0bGIMDHBNJOOO\
    \x18\r\x20\x01(\rR\x0bGIMDHBNJOOO\x12\x20\n\x0bIFKDGEBCDEG\x18\x08\x20\
    \x01(\rR\x0bIFKDGEBCDEGb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(AEDKPBFCKGO::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
