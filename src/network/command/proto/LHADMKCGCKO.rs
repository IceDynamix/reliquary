// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `LHADMKCGCKO.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:LHADMKCGCKO)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct LHADMKCGCKO {
    // message fields
    // @@protoc_insertion_point(field:LHADMKCGCKO.JMIDLLDKJBI)
    pub JMIDLLDKJBI: ::protobuf::MessageField<super::CGJNHNMAMDH::CGJNHNMAMDH>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.JIBDGCFCDIO)
    pub JIBDGCFCDIO: ::protobuf::MessageField<super::NKIDDDPFLJE::NKIDDDPFLJE>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.IJBPHIGKMHF)
    pub IJBPHIGKMHF: ::protobuf::MessageField<super::AGGMHDJGFDI::AGGMHDJGFDI>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.LMPGBONBHGN)
    pub LMPGBONBHGN: ::protobuf::MessageField<super::BMNMBPNBBHM::BMNMBPNBBHM>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.BDJEBPNJELP)
    pub BDJEBPNJELP: ::protobuf::MessageField<super::FBNJOFCEMIL::FBNJOFCEMIL>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.CPBNMACLBEH)
    pub CPBNMACLBEH: ::protobuf::MessageField<super::OMDEFBABNNB::OMDEFBABNNB>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.KKOBBENPFPH)
    pub KKOBBENPFPH: ::protobuf::MessageField<super::FNIJJHAENBL::FNIJJHAENBL>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.HPDBJALEMMO)
    pub HPDBJALEMMO: ::protobuf::MessageField<super::KAAJBAOAKBO::KAAJBAOAKBO>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.level)
    pub level: ::protobuf::MessageField<super::GEKLEELLCBF::GEKLEELLCBF>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF)
    pub ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF: ::protobuf::MessageField<super::KCACNHCADEC::KCACNHCADEC>,
    // @@protoc_insertion_point(field:LHADMKCGCKO.CPIOGJKFECH)
    pub CPIOGJKFECH: ::protobuf::MessageField<super::FINDAFKPOOF::FINDAFKPOOF>,
    // special fields
    // @@protoc_insertion_point(special_field:LHADMKCGCKO.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a LHADMKCGCKO {
    fn default() -> &'a LHADMKCGCKO {
        <LHADMKCGCKO as ::protobuf::Message>::default_instance()
    }
}

impl LHADMKCGCKO {
    pub fn new() -> LHADMKCGCKO {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(11);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::CGJNHNMAMDH::CGJNHNMAMDH>(
            "JMIDLLDKJBI",
            |m: &LHADMKCGCKO| { &m.JMIDLLDKJBI },
            |m: &mut LHADMKCGCKO| { &mut m.JMIDLLDKJBI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::NKIDDDPFLJE::NKIDDDPFLJE>(
            "JIBDGCFCDIO",
            |m: &LHADMKCGCKO| { &m.JIBDGCFCDIO },
            |m: &mut LHADMKCGCKO| { &mut m.JIBDGCFCDIO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::AGGMHDJGFDI::AGGMHDJGFDI>(
            "IJBPHIGKMHF",
            |m: &LHADMKCGCKO| { &m.IJBPHIGKMHF },
            |m: &mut LHADMKCGCKO| { &mut m.IJBPHIGKMHF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BMNMBPNBBHM::BMNMBPNBBHM>(
            "LMPGBONBHGN",
            |m: &LHADMKCGCKO| { &m.LMPGBONBHGN },
            |m: &mut LHADMKCGCKO| { &mut m.LMPGBONBHGN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FBNJOFCEMIL::FBNJOFCEMIL>(
            "BDJEBPNJELP",
            |m: &LHADMKCGCKO| { &m.BDJEBPNJELP },
            |m: &mut LHADMKCGCKO| { &mut m.BDJEBPNJELP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::OMDEFBABNNB::OMDEFBABNNB>(
            "CPBNMACLBEH",
            |m: &LHADMKCGCKO| { &m.CPBNMACLBEH },
            |m: &mut LHADMKCGCKO| { &mut m.CPBNMACLBEH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FNIJJHAENBL::FNIJJHAENBL>(
            "KKOBBENPFPH",
            |m: &LHADMKCGCKO| { &m.KKOBBENPFPH },
            |m: &mut LHADMKCGCKO| { &mut m.KKOBBENPFPH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KAAJBAOAKBO::KAAJBAOAKBO>(
            "HPDBJALEMMO",
            |m: &LHADMKCGCKO| { &m.HPDBJALEMMO },
            |m: &mut LHADMKCGCKO| { &mut m.HPDBJALEMMO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::GEKLEELLCBF::GEKLEELLCBF>(
            "level",
            |m: &LHADMKCGCKO| { &m.level },
            |m: &mut LHADMKCGCKO| { &mut m.level },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KCACNHCADEC::KCACNHCADEC>(
            "ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF",
            |m: &LHADMKCGCKO| { &m.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF },
            |m: &mut LHADMKCGCKO| { &mut m.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FINDAFKPOOF::FINDAFKPOOF>(
            "CPIOGJKFECH",
            |m: &LHADMKCGCKO| { &m.CPIOGJKFECH },
            |m: &mut LHADMKCGCKO| { &mut m.CPIOGJKFECH },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<LHADMKCGCKO>(
            "LHADMKCGCKO",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for LHADMKCGCKO {
    const NAME: &'static str = "LHADMKCGCKO";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                90 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.JMIDLLDKJBI)?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.JIBDGCFCDIO)?;
                },
                114 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.IJBPHIGKMHF)?;
                },
                58 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LMPGBONBHGN)?;
                },
                50 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.BDJEBPNJELP)?;
                },
                34 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CPBNMACLBEH)?;
                },
                26 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.KKOBBENPFPH)?;
                },
                98 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.HPDBJALEMMO)?;
                },
                18 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.level)?;
                },
                66 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF)?;
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CPIOGJKFECH)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let Some(v) = self.JMIDLLDKJBI.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.JIBDGCFCDIO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.IJBPHIGKMHF.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.LMPGBONBHGN.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.BDJEBPNJELP.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.CPBNMACLBEH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.KKOBBENPFPH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.HPDBJALEMMO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.level.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.CPIOGJKFECH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let Some(v) = self.JMIDLLDKJBI.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        }
        if let Some(v) = self.JIBDGCFCDIO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if let Some(v) = self.IJBPHIGKMHF.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        }
        if let Some(v) = self.LMPGBONBHGN.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        }
        if let Some(v) = self.BDJEBPNJELP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        }
        if let Some(v) = self.CPBNMACLBEH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        }
        if let Some(v) = self.KKOBBENPFPH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        }
        if let Some(v) = self.HPDBJALEMMO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        }
        if let Some(v) = self.level.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        }
        if let Some(v) = self.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        }
        if let Some(v) = self.CPIOGJKFECH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> LHADMKCGCKO {
        LHADMKCGCKO::new()
    }

    fn clear(&mut self) {
        self.JMIDLLDKJBI.clear();
        self.JIBDGCFCDIO.clear();
        self.IJBPHIGKMHF.clear();
        self.LMPGBONBHGN.clear();
        self.BDJEBPNJELP.clear();
        self.CPBNMACLBEH.clear();
        self.KKOBBENPFPH.clear();
        self.HPDBJALEMMO.clear();
        self.level.clear();
        self.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF.clear();
        self.CPIOGJKFECH.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static LHADMKCGCKO {
        static instance: LHADMKCGCKO = LHADMKCGCKO {
            JMIDLLDKJBI: ::protobuf::MessageField::none(),
            JIBDGCFCDIO: ::protobuf::MessageField::none(),
            IJBPHIGKMHF: ::protobuf::MessageField::none(),
            LMPGBONBHGN: ::protobuf::MessageField::none(),
            BDJEBPNJELP: ::protobuf::MessageField::none(),
            CPBNMACLBEH: ::protobuf::MessageField::none(),
            KKOBBENPFPH: ::protobuf::MessageField::none(),
            HPDBJALEMMO: ::protobuf::MessageField::none(),
            level: ::protobuf::MessageField::none(),
            ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF: ::protobuf::MessageField::none(),
            CPIOGJKFECH: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for LHADMKCGCKO {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("LHADMKCGCKO").unwrap()).clone()
    }
}

impl ::std::fmt::Display for LHADMKCGCKO {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for LHADMKCGCKO {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11LHADMKCGCKO.proto\x1a\x11AGGMHDJGFDI.proto\x1a\x11BMNMBPNBBHM.prot\
    o\x1a\x11CGJNHNMAMDH.proto\x1a\x11FBNJOFCEMIL.proto\x1a\x11FINDAFKPOOF.p\
    roto\x1a\x11FNIJJHAENBL.proto\x1a\x11GEKLEELLCBF.proto\x1a\x11KAAJBAOAKB\
    O.proto\x1a\x11KCACNHCADEC.proto\x1a\x11NKIDDDPFLJE.proto\x1a\x11OMDEFBA\
    BNNB.proto\"\xcb\x04\n\x0bLHADMKCGCKO\x12.\n\x0bJMIDLLDKJBI\x18\x0b\x20\
    \x01(\x0b2\x0c.CGJNHNMAMDHR\x0bJMIDLLDKJBI\x12.\n\x0bJIBDGCFCDIO\x18\x05\
    \x20\x01(\x0b2\x0c.NKIDDDPFLJER\x0bJIBDGCFCDIO\x12.\n\x0bIJBPHIGKMHF\x18\
    \x0e\x20\x01(\x0b2\x0c.AGGMHDJGFDIR\x0bIJBPHIGKMHF\x12.\n\x0bLMPGBONBHGN\
    \x18\x07\x20\x01(\x0b2\x0c.BMNMBPNBBHMR\x0bLMPGBONBHGN\x12.\n\x0bBDJEBPN\
    JELP\x18\x06\x20\x01(\x0b2\x0c.FBNJOFCEMILR\x0bBDJEBPNJELP\x12.\n\x0bCPB\
    NMACLBEH\x18\x04\x20\x01(\x0b2\x0c.OMDEFBABNNBR\x0bCPBNMACLBEH\x12.\n\
    \x0bKKOBBENPFPH\x18\x03\x20\x01(\x0b2\x0c.FNIJJHAENBLR\x0bKKOBBENPFPH\
    \x12.\n\x0bHPDBJALEMMO\x18\x0c\x20\x01(\x0b2\x0c.KAAJBAOAKBOR\x0bHPDBJAL\
    EMMO\x12\"\n\x05level\x18\x02\x20\x01(\x0b2\x0c.GEKLEELLCBFR\x05level\
    \x12h\n+ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF\x18\x08\x20\x01(\x0b\
    2\x0c.KCACNHCADECR%ROGUECOMMONACTIONRESULTSOURCETYPEBUFF\x12.\n\x0bCPIOG\
    JKFECH\x18\x0f\x20\x01(\x0b2\x0c.FINDAFKPOOFR\x0bCPIOGJKFECHb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(11);
            deps.push(super::AGGMHDJGFDI::file_descriptor().clone());
            deps.push(super::BMNMBPNBBHM::file_descriptor().clone());
            deps.push(super::CGJNHNMAMDH::file_descriptor().clone());
            deps.push(super::FBNJOFCEMIL::file_descriptor().clone());
            deps.push(super::FINDAFKPOOF::file_descriptor().clone());
            deps.push(super::FNIJJHAENBL::file_descriptor().clone());
            deps.push(super::GEKLEELLCBF::file_descriptor().clone());
            deps.push(super::KAAJBAOAKBO::file_descriptor().clone());
            deps.push(super::KCACNHCADEC::file_descriptor().clone());
            deps.push(super::NKIDDDPFLJE::file_descriptor().clone());
            deps.push(super::OMDEFBABNNB::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(LHADMKCGCKO::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
