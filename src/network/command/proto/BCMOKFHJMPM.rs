// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `BCMOKFHJMPM.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:BCMOKFHJMPM)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct BCMOKFHJMPM {
    // message fields
    // @@protoc_insertion_point(field:BCMOKFHJMPM.IFKFEPKHLGN)
    pub IFKFEPKHLGN: ::std::vec::Vec<super::OOEMIBFNLLD::OOEMIBFNLLD>,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.EBOOLGNACJJ)
    pub EBOOLGNACJJ: u64,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.JOJNDGBEJEK)
    pub JOJNDGBEJEK: u64,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.LJJMLEIOIFE)
    pub LJJMLEIOIFE: u32,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.PJDFBPBMBBA)
    pub PJDFBPBMBBA: ::std::string::String,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.KGBEJKNCLFK)
    pub KGBEJKNCLFK: ::std::vec::Vec<super::OOEMIBFNLLD::OOEMIBFNLLD>,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.FHOLFDONOII)
    pub FHOLFDONOII: bool,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.CJFMAIAKENL)
    pub CJFMAIAKENL: ::std::vec::Vec<super::OOEMIBFNLLD::OOEMIBFNLLD>,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.EBABBEJIPJN)
    pub EBABBEJIPJN: ::std::vec::Vec<super::LAILNIGFPOO::LAILNIGFPOO>,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.BNOLDNBMJHF)
    pub BNOLDNBMJHF: u32,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.DGALCMFIDFP)
    pub DGALCMFIDFP: u32,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.JCKNGFJEEGI)
    pub JCKNGFJEEGI: ::std::vec::Vec<super::OOEMIBFNLLD::OOEMIBFNLLD>,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.OMGKJLJIHLH)
    pub OMGKJLJIHLH: u64,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.JLEGPNIHMJD)
    pub JLEGPNIHMJD: ::std::string::String,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.HHJPBLEKAPN)
    pub HHJPBLEKAPN: u32,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.DGEPMKFFOAB)
    pub DGEPMKFFOAB: u32,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.JGNIHLJFJPP)
    pub JGNIHLJFJPP: u32,
    // @@protoc_insertion_point(field:BCMOKFHJMPM.DDIBEFMILMP)
    pub DDIBEFMILMP: ::std::string::String,
    // special fields
    // @@protoc_insertion_point(special_field:BCMOKFHJMPM.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a BCMOKFHJMPM {
    fn default() -> &'a BCMOKFHJMPM {
        <BCMOKFHJMPM as ::protobuf::Message>::default_instance()
    }
}

impl BCMOKFHJMPM {
    pub fn new() -> BCMOKFHJMPM {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(18);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "IFKFEPKHLGN",
            |m: &BCMOKFHJMPM| { &m.IFKFEPKHLGN },
            |m: &mut BCMOKFHJMPM| { &mut m.IFKFEPKHLGN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EBOOLGNACJJ",
            |m: &BCMOKFHJMPM| { &m.EBOOLGNACJJ },
            |m: &mut BCMOKFHJMPM| { &mut m.EBOOLGNACJJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JOJNDGBEJEK",
            |m: &BCMOKFHJMPM| { &m.JOJNDGBEJEK },
            |m: &mut BCMOKFHJMPM| { &mut m.JOJNDGBEJEK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LJJMLEIOIFE",
            |m: &BCMOKFHJMPM| { &m.LJJMLEIOIFE },
            |m: &mut BCMOKFHJMPM| { &mut m.LJJMLEIOIFE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PJDFBPBMBBA",
            |m: &BCMOKFHJMPM| { &m.PJDFBPBMBBA },
            |m: &mut BCMOKFHJMPM| { &mut m.PJDFBPBMBBA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "KGBEJKNCLFK",
            |m: &BCMOKFHJMPM| { &m.KGBEJKNCLFK },
            |m: &mut BCMOKFHJMPM| { &mut m.KGBEJKNCLFK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FHOLFDONOII",
            |m: &BCMOKFHJMPM| { &m.FHOLFDONOII },
            |m: &mut BCMOKFHJMPM| { &mut m.FHOLFDONOII },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "CJFMAIAKENL",
            |m: &BCMOKFHJMPM| { &m.CJFMAIAKENL },
            |m: &mut BCMOKFHJMPM| { &mut m.CJFMAIAKENL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "EBABBEJIPJN",
            |m: &BCMOKFHJMPM| { &m.EBABBEJIPJN },
            |m: &mut BCMOKFHJMPM| { &mut m.EBABBEJIPJN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BNOLDNBMJHF",
            |m: &BCMOKFHJMPM| { &m.BNOLDNBMJHF },
            |m: &mut BCMOKFHJMPM| { &mut m.BNOLDNBMJHF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DGALCMFIDFP",
            |m: &BCMOKFHJMPM| { &m.DGALCMFIDFP },
            |m: &mut BCMOKFHJMPM| { &mut m.DGALCMFIDFP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "JCKNGFJEEGI",
            |m: &BCMOKFHJMPM| { &m.JCKNGFJEEGI },
            |m: &mut BCMOKFHJMPM| { &mut m.JCKNGFJEEGI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OMGKJLJIHLH",
            |m: &BCMOKFHJMPM| { &m.OMGKJLJIHLH },
            |m: &mut BCMOKFHJMPM| { &mut m.OMGKJLJIHLH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JLEGPNIHMJD",
            |m: &BCMOKFHJMPM| { &m.JLEGPNIHMJD },
            |m: &mut BCMOKFHJMPM| { &mut m.JLEGPNIHMJD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HHJPBLEKAPN",
            |m: &BCMOKFHJMPM| { &m.HHJPBLEKAPN },
            |m: &mut BCMOKFHJMPM| { &mut m.HHJPBLEKAPN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DGEPMKFFOAB",
            |m: &BCMOKFHJMPM| { &m.DGEPMKFFOAB },
            |m: &mut BCMOKFHJMPM| { &mut m.DGEPMKFFOAB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JGNIHLJFJPP",
            |m: &BCMOKFHJMPM| { &m.JGNIHLJFJPP },
            |m: &mut BCMOKFHJMPM| { &mut m.JGNIHLJFJPP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DDIBEFMILMP",
            |m: &BCMOKFHJMPM| { &m.DDIBEFMILMP },
            |m: &mut BCMOKFHJMPM| { &mut m.DDIBEFMILMP },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<BCMOKFHJMPM>(
            "BCMOKFHJMPM",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for BCMOKFHJMPM {
    const NAME: &'static str = "BCMOKFHJMPM";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                82 => {
                    self.IFKFEPKHLGN.push(is.read_message()?);
                },
                112 => {
                    self.EBOOLGNACJJ = is.read_uint64()?;
                },
                120 => {
                    self.JOJNDGBEJEK = is.read_uint64()?;
                },
                16 => {
                    self.LJJMLEIOIFE = is.read_uint32()?;
                },
                786 => {
                    self.PJDFBPBMBBA = is.read_string()?;
                },
                50 => {
                    self.KGBEJKNCLFK.push(is.read_message()?);
                },
                40 => {
                    self.FHOLFDONOII = is.read_bool()?;
                },
                26 => {
                    self.CJFMAIAKENL.push(is.read_message()?);
                },
                98 => {
                    self.EBABBEJIPJN.push(is.read_message()?);
                },
                32 => {
                    self.BNOLDNBMJHF = is.read_uint32()?;
                },
                104 => {
                    self.DGALCMFIDFP = is.read_uint32()?;
                },
                58 => {
                    self.JCKNGFJEEGI.push(is.read_message()?);
                },
                72 => {
                    self.OMGKJLJIHLH = is.read_uint64()?;
                },
                1018 => {
                    self.JLEGPNIHMJD = is.read_string()?;
                },
                64 => {
                    self.HHJPBLEKAPN = is.read_uint32()?;
                },
                88 => {
                    self.DGEPMKFFOAB = is.read_uint32()?;
                },
                8 => {
                    self.JGNIHLJFJPP = is.read_uint32()?;
                },
                14658 => {
                    self.DDIBEFMILMP = is.read_string()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        for value in &self.IFKFEPKHLGN {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.EBOOLGNACJJ != 0 {
            my_size += ::protobuf::rt::uint64_size(14, self.EBOOLGNACJJ);
        }
        if self.JOJNDGBEJEK != 0 {
            my_size += ::protobuf::rt::uint64_size(15, self.JOJNDGBEJEK);
        }
        if self.LJJMLEIOIFE != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.LJJMLEIOIFE);
        }
        if !self.PJDFBPBMBBA.is_empty() {
            my_size += ::protobuf::rt::string_size(98, &self.PJDFBPBMBBA);
        }
        for value in &self.KGBEJKNCLFK {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.FHOLFDONOII != false {
            my_size += 1 + 1;
        }
        for value in &self.CJFMAIAKENL {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.EBABBEJIPJN {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.BNOLDNBMJHF != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.BNOLDNBMJHF);
        }
        if self.DGALCMFIDFP != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.DGALCMFIDFP);
        }
        for value in &self.JCKNGFJEEGI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.OMGKJLJIHLH != 0 {
            my_size += ::protobuf::rt::uint64_size(9, self.OMGKJLJIHLH);
        }
        if !self.JLEGPNIHMJD.is_empty() {
            my_size += ::protobuf::rt::string_size(127, &self.JLEGPNIHMJD);
        }
        if self.HHJPBLEKAPN != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.HHJPBLEKAPN);
        }
        if self.DGEPMKFFOAB != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.DGEPMKFFOAB);
        }
        if self.JGNIHLJFJPP != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.JGNIHLJFJPP);
        }
        if !self.DDIBEFMILMP.is_empty() {
            my_size += ::protobuf::rt::string_size(1832, &self.DDIBEFMILMP);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        for v in &self.IFKFEPKHLGN {
            ::protobuf::rt::write_message_field_with_cached_size(10, v, os)?;
        };
        if self.EBOOLGNACJJ != 0 {
            os.write_uint64(14, self.EBOOLGNACJJ)?;
        }
        if self.JOJNDGBEJEK != 0 {
            os.write_uint64(15, self.JOJNDGBEJEK)?;
        }
        if self.LJJMLEIOIFE != 0 {
            os.write_uint32(2, self.LJJMLEIOIFE)?;
        }
        if !self.PJDFBPBMBBA.is_empty() {
            os.write_string(98, &self.PJDFBPBMBBA)?;
        }
        for v in &self.KGBEJKNCLFK {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        };
        if self.FHOLFDONOII != false {
            os.write_bool(5, self.FHOLFDONOII)?;
        }
        for v in &self.CJFMAIAKENL {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        };
        for v in &self.EBABBEJIPJN {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.BNOLDNBMJHF != 0 {
            os.write_uint32(4, self.BNOLDNBMJHF)?;
        }
        if self.DGALCMFIDFP != 0 {
            os.write_uint32(13, self.DGALCMFIDFP)?;
        }
        for v in &self.JCKNGFJEEGI {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        };
        if self.OMGKJLJIHLH != 0 {
            os.write_uint64(9, self.OMGKJLJIHLH)?;
        }
        if !self.JLEGPNIHMJD.is_empty() {
            os.write_string(127, &self.JLEGPNIHMJD)?;
        }
        if self.HHJPBLEKAPN != 0 {
            os.write_uint32(8, self.HHJPBLEKAPN)?;
        }
        if self.DGEPMKFFOAB != 0 {
            os.write_uint32(11, self.DGEPMKFFOAB)?;
        }
        if self.JGNIHLJFJPP != 0 {
            os.write_uint32(1, self.JGNIHLJFJPP)?;
        }
        if !self.DDIBEFMILMP.is_empty() {
            os.write_string(1832, &self.DDIBEFMILMP)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> BCMOKFHJMPM {
        BCMOKFHJMPM::new()
    }

    fn clear(&mut self) {
        self.IFKFEPKHLGN.clear();
        self.EBOOLGNACJJ = 0;
        self.JOJNDGBEJEK = 0;
        self.LJJMLEIOIFE = 0;
        self.PJDFBPBMBBA.clear();
        self.KGBEJKNCLFK.clear();
        self.FHOLFDONOII = false;
        self.CJFMAIAKENL.clear();
        self.EBABBEJIPJN.clear();
        self.BNOLDNBMJHF = 0;
        self.DGALCMFIDFP = 0;
        self.JCKNGFJEEGI.clear();
        self.OMGKJLJIHLH = 0;
        self.JLEGPNIHMJD.clear();
        self.HHJPBLEKAPN = 0;
        self.DGEPMKFFOAB = 0;
        self.JGNIHLJFJPP = 0;
        self.DDIBEFMILMP.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static BCMOKFHJMPM {
        static instance: BCMOKFHJMPM = BCMOKFHJMPM {
            IFKFEPKHLGN: ::std::vec::Vec::new(),
            EBOOLGNACJJ: 0,
            JOJNDGBEJEK: 0,
            LJJMLEIOIFE: 0,
            PJDFBPBMBBA: ::std::string::String::new(),
            KGBEJKNCLFK: ::std::vec::Vec::new(),
            FHOLFDONOII: false,
            CJFMAIAKENL: ::std::vec::Vec::new(),
            EBABBEJIPJN: ::std::vec::Vec::new(),
            BNOLDNBMJHF: 0,
            DGALCMFIDFP: 0,
            JCKNGFJEEGI: ::std::vec::Vec::new(),
            OMGKJLJIHLH: 0,
            JLEGPNIHMJD: ::std::string::String::new(),
            HHJPBLEKAPN: 0,
            DGEPMKFFOAB: 0,
            JGNIHLJFJPP: 0,
            DDIBEFMILMP: ::std::string::String::new(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for BCMOKFHJMPM {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("BCMOKFHJMPM").unwrap()).clone()
    }
}

impl ::std::fmt::Display for BCMOKFHJMPM {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for BCMOKFHJMPM {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11BCMOKFHJMPM.proto\x1a\x11LAILNIGFPOO.proto\x1a\x11OOEMIBFNLLD.prot\
    o\"\xb8\x05\n\x0bBCMOKFHJMPM\x12.\n\x0bIFKFEPKHLGN\x18\n\x20\x03(\x0b2\
    \x0c.OOEMIBFNLLDR\x0bIFKFEPKHLGN\x12\x20\n\x0bEBOOLGNACJJ\x18\x0e\x20\
    \x01(\x04R\x0bEBOOLGNACJJ\x12\x20\n\x0bJOJNDGBEJEK\x18\x0f\x20\x01(\x04R\
    \x0bJOJNDGBEJEK\x12\x20\n\x0bLJJMLEIOIFE\x18\x02\x20\x01(\rR\x0bLJJMLEIO\
    IFE\x12\x20\n\x0bPJDFBPBMBBA\x18b\x20\x01(\tR\x0bPJDFBPBMBBA\x12.\n\x0bK\
    GBEJKNCLFK\x18\x06\x20\x03(\x0b2\x0c.OOEMIBFNLLDR\x0bKGBEJKNCLFK\x12\x20\
    \n\x0bFHOLFDONOII\x18\x05\x20\x01(\x08R\x0bFHOLFDONOII\x12.\n\x0bCJFMAIA\
    KENL\x18\x03\x20\x03(\x0b2\x0c.OOEMIBFNLLDR\x0bCJFMAIAKENL\x12.\n\x0bEBA\
    BBEJIPJN\x18\x0c\x20\x03(\x0b2\x0c.LAILNIGFPOOR\x0bEBABBEJIPJN\x12\x20\n\
    \x0bBNOLDNBMJHF\x18\x04\x20\x01(\rR\x0bBNOLDNBMJHF\x12\x20\n\x0bDGALCMFI\
    DFP\x18\r\x20\x01(\rR\x0bDGALCMFIDFP\x12.\n\x0bJCKNGFJEEGI\x18\x07\x20\
    \x03(\x0b2\x0c.OOEMIBFNLLDR\x0bJCKNGFJEEGI\x12\x20\n\x0bOMGKJLJIHLH\x18\
    \t\x20\x01(\x04R\x0bOMGKJLJIHLH\x12\x20\n\x0bJLEGPNIHMJD\x18\x7f\x20\x01\
    (\tR\x0bJLEGPNIHMJD\x12\x20\n\x0bHHJPBLEKAPN\x18\x08\x20\x01(\rR\x0bHHJP\
    BLEKAPN\x12\x20\n\x0bDGEPMKFFOAB\x18\x0b\x20\x01(\rR\x0bDGEPMKFFOAB\x12\
    \x20\n\x0bJGNIHLJFJPP\x18\x01\x20\x01(\rR\x0bJGNIHLJFJPP\x12!\n\x0bDDIBE\
    FMILMP\x18\xa8\x0e\x20\x01(\tR\x0bDDIBEFMILMPb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(super::LAILNIGFPOO::file_descriptor().clone());
            deps.push(super::OOEMIBFNLLD::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(BCMOKFHJMPM::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
