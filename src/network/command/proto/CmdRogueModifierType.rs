// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdRogueModifierType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdRogueModifierType)
pub enum CmdRogueModifierType {
    // @@protoc_insertion_point(enum_value:CmdRogueModifierType.CmdRogueModifierTypeNone)
    CmdRogueModifierTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdRogueModifierType.CmdRogueModifierAddNotify)
    CmdRogueModifierAddNotify = 5358,
    // @@protoc_insertion_point(enum_value:CmdRogueModifierType.CmdRogueModifierUpdateNotify)
    CmdRogueModifierUpdateNotify = 5376,
    // @@protoc_insertion_point(enum_value:CmdRogueModifierType.CmdRogueModifierSelectCellScRsp)
    CmdRogueModifierSelectCellScRsp = 5330,
    // @@protoc_insertion_point(enum_value:CmdRogueModifierType.CmdRogueModifierSelectCellCsReq)
    CmdRogueModifierSelectCellCsReq = 5324,
    // @@protoc_insertion_point(enum_value:CmdRogueModifierType.CmdRogueModifierStageStartNotify)
    CmdRogueModifierStageStartNotify = 5311,
    // @@protoc_insertion_point(enum_value:CmdRogueModifierType.CmdRogueModifierDelNotify)
    CmdRogueModifierDelNotify = 5328,
}

impl ::protobuf::Enum for CmdRogueModifierType {
    const NAME: &'static str = "CmdRogueModifierType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdRogueModifierType> {
        match value {
            0 => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierTypeNone),
            5358 => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierAddNotify),
            5376 => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierUpdateNotify),
            5330 => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierSelectCellScRsp),
            5324 => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierSelectCellCsReq),
            5311 => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierStageStartNotify),
            5328 => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierDelNotify),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdRogueModifierType> {
        match str {
            "CmdRogueModifierTypeNone" => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierTypeNone),
            "CmdRogueModifierAddNotify" => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierAddNotify),
            "CmdRogueModifierUpdateNotify" => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierUpdateNotify),
            "CmdRogueModifierSelectCellScRsp" => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierSelectCellScRsp),
            "CmdRogueModifierSelectCellCsReq" => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierSelectCellCsReq),
            "CmdRogueModifierStageStartNotify" => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierStageStartNotify),
            "CmdRogueModifierDelNotify" => ::std::option::Option::Some(CmdRogueModifierType::CmdRogueModifierDelNotify),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdRogueModifierType] = &[
        CmdRogueModifierType::CmdRogueModifierTypeNone,
        CmdRogueModifierType::CmdRogueModifierAddNotify,
        CmdRogueModifierType::CmdRogueModifierUpdateNotify,
        CmdRogueModifierType::CmdRogueModifierSelectCellScRsp,
        CmdRogueModifierType::CmdRogueModifierSelectCellCsReq,
        CmdRogueModifierType::CmdRogueModifierStageStartNotify,
        CmdRogueModifierType::CmdRogueModifierDelNotify,
    ];
}

impl ::protobuf::EnumFull for CmdRogueModifierType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdRogueModifierType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdRogueModifierType::CmdRogueModifierTypeNone => 0,
            CmdRogueModifierType::CmdRogueModifierAddNotify => 1,
            CmdRogueModifierType::CmdRogueModifierUpdateNotify => 2,
            CmdRogueModifierType::CmdRogueModifierSelectCellScRsp => 3,
            CmdRogueModifierType::CmdRogueModifierSelectCellCsReq => 4,
            CmdRogueModifierType::CmdRogueModifierStageStartNotify => 5,
            CmdRogueModifierType::CmdRogueModifierDelNotify => 6,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdRogueModifierType {
    fn default() -> Self {
        CmdRogueModifierType::CmdRogueModifierTypeNone
    }
}

impl CmdRogueModifierType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdRogueModifierType>("CmdRogueModifierType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x1aCmdRogueModifierType.proto*\x8a\x02\n\x14CmdRogueModifierType\x12\
    \x1c\n\x18CmdRogueModifierTypeNone\x10\0\x12\x1e\n\x19CmdRogueModifierAd\
    dNotify\x10\xee)\x12!\n\x1cCmdRogueModifierUpdateNotify\x10\x80*\x12$\n\
    \x1fCmdRogueModifierSelectCellScRsp\x10\xd2)\x12$\n\x1fCmdRogueModifierS\
    electCellCsReq\x10\xcc)\x12%\n\x20CmdRogueModifierStageStartNotify\x10\
    \xbf)\x12\x1e\n\x19CmdRogueModifierDelNotify\x10\xd0)b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdRogueModifierType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
