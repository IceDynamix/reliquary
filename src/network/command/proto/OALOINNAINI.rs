// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `OALOINNAINI.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:OALOINNAINI)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct OALOINNAINI {
    // message fields
    // @@protoc_insertion_point(field:OALOINNAINI.BNAFEECPEGO)
    pub BNAFEECPEGO: bool,
    // @@protoc_insertion_point(field:OALOINNAINI.LICOBIKOAAO)
    pub LICOBIKOAAO: ::protobuf::MessageField<super::KJEHFKBJPHD::KJEHFKBJPHD>,
    // @@protoc_insertion_point(field:OALOINNAINI.BKKNAEGKLCB)
    pub BKKNAEGKLCB: ::protobuf::EnumOrUnknown<super::ChessRogueDiceType::ChessRogueDiceType>,
    // @@protoc_insertion_point(field:OALOINNAINI.ICCEPGCIFMG)
    pub ICCEPGCIFMG: ::protobuf::EnumOrUnknown<super::ChessRogueDiceStatus::ChessRogueDiceStatus>,
    // @@protoc_insertion_point(field:OALOINNAINI.HFMJDFPNNCM)
    pub HFMJDFPNNCM: u32,
    // @@protoc_insertion_point(field:OALOINNAINI.BONCMHIGPFJ)
    pub BONCMHIGPFJ: ::protobuf::MessageField<super::AEKPJELDAPD::AEKPJELDAPD>,
    // @@protoc_insertion_point(field:OALOINNAINI.ONLGLOCADGD)
    pub ONLGLOCADGD: u32,
    // @@protoc_insertion_point(field:OALOINNAINI.EDPHLDEGJLM)
    pub EDPHLDEGJLM: ::protobuf::MessageField<super::EENDHPKPFLP::EENDHPKPFLP>,
    // @@protoc_insertion_point(field:OALOINNAINI.CIBLONPNBFE)
    pub CIBLONPNBFE: u32,
    // @@protoc_insertion_point(field:OALOINNAINI.OMCAGFAAHKE)
    pub OMCAGFAAHKE: u32,
    // @@protoc_insertion_point(field:OALOINNAINI.FNEIDJIMJPH)
    pub FNEIDJIMJPH: bool,
    // @@protoc_insertion_point(field:OALOINNAINI.CJGONLAECKO)
    pub CJGONLAECKO: u32,
    // @@protoc_insertion_point(field:OALOINNAINI.GOFPDNOAPBB)
    pub GOFPDNOAPBB: u32,
    // @@protoc_insertion_point(field:OALOINNAINI.JFIPIIFPMMB)
    pub JFIPIIFPMMB: i32,
    // @@protoc_insertion_point(field:OALOINNAINI.NGDEDLKNGFG)
    pub NGDEDLKNGFG: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:OALOINNAINI.KPNAKIPLJGB)
    pub KPNAKIPLJGB: u32,
    // @@protoc_insertion_point(field:OALOINNAINI.PAGPBLAFNEH)
    pub PAGPBLAFNEH: u32,
    // special fields
    // @@protoc_insertion_point(special_field:OALOINNAINI.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a OALOINNAINI {
    fn default() -> &'a OALOINNAINI {
        <OALOINNAINI as ::protobuf::Message>::default_instance()
    }
}

impl OALOINNAINI {
    pub fn new() -> OALOINNAINI {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(17);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BNAFEECPEGO",
            |m: &OALOINNAINI| { &m.BNAFEECPEGO },
            |m: &mut OALOINNAINI| { &mut m.BNAFEECPEGO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KJEHFKBJPHD::KJEHFKBJPHD>(
            "LICOBIKOAAO",
            |m: &OALOINNAINI| { &m.LICOBIKOAAO },
            |m: &mut OALOINNAINI| { &mut m.LICOBIKOAAO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BKKNAEGKLCB",
            |m: &OALOINNAINI| { &m.BKKNAEGKLCB },
            |m: &mut OALOINNAINI| { &mut m.BKKNAEGKLCB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ICCEPGCIFMG",
            |m: &OALOINNAINI| { &m.ICCEPGCIFMG },
            |m: &mut OALOINNAINI| { &mut m.ICCEPGCIFMG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HFMJDFPNNCM",
            |m: &OALOINNAINI| { &m.HFMJDFPNNCM },
            |m: &mut OALOINNAINI| { &mut m.HFMJDFPNNCM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::AEKPJELDAPD::AEKPJELDAPD>(
            "BONCMHIGPFJ",
            |m: &OALOINNAINI| { &m.BONCMHIGPFJ },
            |m: &mut OALOINNAINI| { &mut m.BONCMHIGPFJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ONLGLOCADGD",
            |m: &OALOINNAINI| { &m.ONLGLOCADGD },
            |m: &mut OALOINNAINI| { &mut m.ONLGLOCADGD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::EENDHPKPFLP::EENDHPKPFLP>(
            "EDPHLDEGJLM",
            |m: &OALOINNAINI| { &m.EDPHLDEGJLM },
            |m: &mut OALOINNAINI| { &mut m.EDPHLDEGJLM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CIBLONPNBFE",
            |m: &OALOINNAINI| { &m.CIBLONPNBFE },
            |m: &mut OALOINNAINI| { &mut m.CIBLONPNBFE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OMCAGFAAHKE",
            |m: &OALOINNAINI| { &m.OMCAGFAAHKE },
            |m: &mut OALOINNAINI| { &mut m.OMCAGFAAHKE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FNEIDJIMJPH",
            |m: &OALOINNAINI| { &m.FNEIDJIMJPH },
            |m: &mut OALOINNAINI| { &mut m.FNEIDJIMJPH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CJGONLAECKO",
            |m: &OALOINNAINI| { &m.CJGONLAECKO },
            |m: &mut OALOINNAINI| { &mut m.CJGONLAECKO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GOFPDNOAPBB",
            |m: &OALOINNAINI| { &m.GOFPDNOAPBB },
            |m: &mut OALOINNAINI| { &mut m.GOFPDNOAPBB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JFIPIIFPMMB",
            |m: &OALOINNAINI| { &m.JFIPIIFPMMB },
            |m: &mut OALOINNAINI| { &mut m.JFIPIIFPMMB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "NGDEDLKNGFG",
            |m: &OALOINNAINI| { &m.NGDEDLKNGFG },
            |m: &mut OALOINNAINI| { &mut m.NGDEDLKNGFG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KPNAKIPLJGB",
            |m: &OALOINNAINI| { &m.KPNAKIPLJGB },
            |m: &mut OALOINNAINI| { &mut m.KPNAKIPLJGB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PAGPBLAFNEH",
            |m: &OALOINNAINI| { &m.PAGPBLAFNEH },
            |m: &mut OALOINNAINI| { &mut m.PAGPBLAFNEH },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<OALOINNAINI>(
            "OALOINNAINI",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for OALOINNAINI {
    const NAME: &'static str = "OALOINNAINI";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                88 => {
                    self.BNAFEECPEGO = is.read_bool()?;
                },
                9578 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LICOBIKOAAO)?;
                },
                64 => {
                    self.BKKNAEGKLCB = is.read_enum_or_unknown()?;
                },
                24 => {
                    self.ICCEPGCIFMG = is.read_enum_or_unknown()?;
                },
                32 => {
                    self.HFMJDFPNNCM = is.read_uint32()?;
                },
                13394 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.BONCMHIGPFJ)?;
                },
                72 => {
                    self.ONLGLOCADGD = is.read_uint32()?;
                },
                12378 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.EDPHLDEGJLM)?;
                },
                104 => {
                    self.CIBLONPNBFE = is.read_uint32()?;
                },
                48 => {
                    self.OMCAGFAAHKE = is.read_uint32()?;
                },
                14240 => {
                    self.FNEIDJIMJPH = is.read_bool()?;
                },
                112 => {
                    self.CJGONLAECKO = is.read_uint32()?;
                },
                8 => {
                    self.GOFPDNOAPBB = is.read_uint32()?;
                },
                13384 => {
                    self.JFIPIIFPMMB = is.read_int32()?;
                },
                15106 => {
                    is.read_repeated_packed_uint32_into(&mut self.NGDEDLKNGFG)?;
                },
                15104 => {
                    self.NGDEDLKNGFG.push(is.read_uint32()?);
                },
                96 => {
                    self.KPNAKIPLJGB = is.read_uint32()?;
                },
                16 => {
                    self.PAGPBLAFNEH = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.BNAFEECPEGO != false {
            my_size += 1 + 1;
        }
        if let Some(v) = self.LICOBIKOAAO.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.BKKNAEGKLCB != ::protobuf::EnumOrUnknown::new(super::ChessRogueDiceType::ChessRogueDiceType::CHESS_ROGUE_DICE_FIXED) {
            my_size += ::protobuf::rt::int32_size(8, self.BKKNAEGKLCB.value());
        }
        if self.ICCEPGCIFMG != ::protobuf::EnumOrUnknown::new(super::ChessRogueDiceStatus::ChessRogueDiceStatus::CHESS_ROGUE_DICE_IDLE) {
            my_size += ::protobuf::rt::int32_size(3, self.ICCEPGCIFMG.value());
        }
        if self.HFMJDFPNNCM != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.HFMJDFPNNCM);
        }
        if let Some(v) = self.BONCMHIGPFJ.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.ONLGLOCADGD != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.ONLGLOCADGD);
        }
        if let Some(v) = self.EDPHLDEGJLM.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.CIBLONPNBFE != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.CIBLONPNBFE);
        }
        if self.OMCAGFAAHKE != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.OMCAGFAAHKE);
        }
        if self.FNEIDJIMJPH != false {
            my_size += 2 + 1;
        }
        if self.CJGONLAECKO != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.CJGONLAECKO);
        }
        if self.GOFPDNOAPBB != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.GOFPDNOAPBB);
        }
        if self.JFIPIIFPMMB != 0 {
            my_size += ::protobuf::rt::int32_size(1673, self.JFIPIIFPMMB);
        }
        my_size += ::protobuf::rt::vec_packed_uint32_size(1888, &self.NGDEDLKNGFG);
        if self.KPNAKIPLJGB != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.KPNAKIPLJGB);
        }
        if self.PAGPBLAFNEH != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.PAGPBLAFNEH);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.BNAFEECPEGO != false {
            os.write_bool(11, self.BNAFEECPEGO)?;
        }
        if let Some(v) = self.LICOBIKOAAO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1197, v, os)?;
        }
        if self.BKKNAEGKLCB != ::protobuf::EnumOrUnknown::new(super::ChessRogueDiceType::ChessRogueDiceType::CHESS_ROGUE_DICE_FIXED) {
            os.write_enum(8, ::protobuf::EnumOrUnknown::value(&self.BKKNAEGKLCB))?;
        }
        if self.ICCEPGCIFMG != ::protobuf::EnumOrUnknown::new(super::ChessRogueDiceStatus::ChessRogueDiceStatus::CHESS_ROGUE_DICE_IDLE) {
            os.write_enum(3, ::protobuf::EnumOrUnknown::value(&self.ICCEPGCIFMG))?;
        }
        if self.HFMJDFPNNCM != 0 {
            os.write_uint32(4, self.HFMJDFPNNCM)?;
        }
        if let Some(v) = self.BONCMHIGPFJ.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1674, v, os)?;
        }
        if self.ONLGLOCADGD != 0 {
            os.write_uint32(9, self.ONLGLOCADGD)?;
        }
        if let Some(v) = self.EDPHLDEGJLM.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1547, v, os)?;
        }
        if self.CIBLONPNBFE != 0 {
            os.write_uint32(13, self.CIBLONPNBFE)?;
        }
        if self.OMCAGFAAHKE != 0 {
            os.write_uint32(6, self.OMCAGFAAHKE)?;
        }
        if self.FNEIDJIMJPH != false {
            os.write_bool(1780, self.FNEIDJIMJPH)?;
        }
        if self.CJGONLAECKO != 0 {
            os.write_uint32(14, self.CJGONLAECKO)?;
        }
        if self.GOFPDNOAPBB != 0 {
            os.write_uint32(1, self.GOFPDNOAPBB)?;
        }
        if self.JFIPIIFPMMB != 0 {
            os.write_int32(1673, self.JFIPIIFPMMB)?;
        }
        os.write_repeated_packed_uint32(1888, &self.NGDEDLKNGFG)?;
        if self.KPNAKIPLJGB != 0 {
            os.write_uint32(12, self.KPNAKIPLJGB)?;
        }
        if self.PAGPBLAFNEH != 0 {
            os.write_uint32(2, self.PAGPBLAFNEH)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> OALOINNAINI {
        OALOINNAINI::new()
    }

    fn clear(&mut self) {
        self.BNAFEECPEGO = false;
        self.LICOBIKOAAO.clear();
        self.BKKNAEGKLCB = ::protobuf::EnumOrUnknown::new(super::ChessRogueDiceType::ChessRogueDiceType::CHESS_ROGUE_DICE_FIXED);
        self.ICCEPGCIFMG = ::protobuf::EnumOrUnknown::new(super::ChessRogueDiceStatus::ChessRogueDiceStatus::CHESS_ROGUE_DICE_IDLE);
        self.HFMJDFPNNCM = 0;
        self.BONCMHIGPFJ.clear();
        self.ONLGLOCADGD = 0;
        self.EDPHLDEGJLM.clear();
        self.CIBLONPNBFE = 0;
        self.OMCAGFAAHKE = 0;
        self.FNEIDJIMJPH = false;
        self.CJGONLAECKO = 0;
        self.GOFPDNOAPBB = 0;
        self.JFIPIIFPMMB = 0;
        self.NGDEDLKNGFG.clear();
        self.KPNAKIPLJGB = 0;
        self.PAGPBLAFNEH = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static OALOINNAINI {
        static instance: OALOINNAINI = OALOINNAINI {
            BNAFEECPEGO: false,
            LICOBIKOAAO: ::protobuf::MessageField::none(),
            BKKNAEGKLCB: ::protobuf::EnumOrUnknown::from_i32(0),
            ICCEPGCIFMG: ::protobuf::EnumOrUnknown::from_i32(0),
            HFMJDFPNNCM: 0,
            BONCMHIGPFJ: ::protobuf::MessageField::none(),
            ONLGLOCADGD: 0,
            EDPHLDEGJLM: ::protobuf::MessageField::none(),
            CIBLONPNBFE: 0,
            OMCAGFAAHKE: 0,
            FNEIDJIMJPH: false,
            CJGONLAECKO: 0,
            GOFPDNOAPBB: 0,
            JFIPIIFPMMB: 0,
            NGDEDLKNGFG: ::std::vec::Vec::new(),
            KPNAKIPLJGB: 0,
            PAGPBLAFNEH: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for OALOINNAINI {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("OALOINNAINI").unwrap()).clone()
    }
}

impl ::std::fmt::Display for OALOINNAINI {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for OALOINNAINI {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11OALOINNAINI.proto\x1a\x11AEKPJELDAPD.proto\x1a\x1aChessRogueDiceSt\
    atus.proto\x1a\x18ChessRogueDiceType.proto\x1a\x11EENDHPKPFLP.proto\x1a\
    \x11KJEHFKBJPHD.proto\"\xab\x05\n\x0bOALOINNAINI\x12\x20\n\x0bBNAFEECPEG\
    O\x18\x0b\x20\x01(\x08R\x0bBNAFEECPEGO\x12/\n\x0bLICOBIKOAAO\x18\xad\t\
    \x20\x01(\x0b2\x0c.KJEHFKBJPHDR\x0bLICOBIKOAAO\x125\n\x0bBKKNAEGKLCB\x18\
    \x08\x20\x01(\x0e2\x13.ChessRogueDiceTypeR\x0bBKKNAEGKLCB\x127\n\x0bICCE\
    PGCIFMG\x18\x03\x20\x01(\x0e2\x15.ChessRogueDiceStatusR\x0bICCEPGCIFMG\
    \x12\x20\n\x0bHFMJDFPNNCM\x18\x04\x20\x01(\rR\x0bHFMJDFPNNCM\x12/\n\x0bB\
    ONCMHIGPFJ\x18\x8a\r\x20\x01(\x0b2\x0c.AEKPJELDAPDR\x0bBONCMHIGPFJ\x12\
    \x20\n\x0bONLGLOCADGD\x18\t\x20\x01(\rR\x0bONLGLOCADGD\x12/\n\x0bEDPHLDE\
    GJLM\x18\x8b\x0c\x20\x01(\x0b2\x0c.EENDHPKPFLPR\x0bEDPHLDEGJLM\x12\x20\n\
    \x0bCIBLONPNBFE\x18\r\x20\x01(\rR\x0bCIBLONPNBFE\x12\x20\n\x0bOMCAGFAAHK\
    E\x18\x06\x20\x01(\rR\x0bOMCAGFAAHKE\x12!\n\x0bFNEIDJIMJPH\x18\xf4\r\x20\
    \x01(\x08R\x0bFNEIDJIMJPH\x12\x20\n\x0bCJGONLAECKO\x18\x0e\x20\x01(\rR\
    \x0bCJGONLAECKO\x12\x20\n\x0bGOFPDNOAPBB\x18\x01\x20\x01(\rR\x0bGOFPDNOA\
    PBB\x12!\n\x0bJFIPIIFPMMB\x18\x89\r\x20\x01(\x05R\x0bJFIPIIFPMMB\x12!\n\
    \x0bNGDEDLKNGFG\x18\xe0\x0e\x20\x03(\rR\x0bNGDEDLKNGFG\x12\x20\n\x0bKPNA\
    KIPLJGB\x18\x0c\x20\x01(\rR\x0bKPNAKIPLJGB\x12\x20\n\x0bPAGPBLAFNEH\x18\
    \x02\x20\x01(\rR\x0bPAGPBLAFNEHb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(5);
            deps.push(super::AEKPJELDAPD::file_descriptor().clone());
            deps.push(super::ChessRogueDiceStatus::file_descriptor().clone());
            deps.push(super::ChessRogueDiceType::file_descriptor().clone());
            deps.push(super::EENDHPKPFLP::file_descriptor().clone());
            deps.push(super::KJEHFKBJPHD::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(OALOINNAINI::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
