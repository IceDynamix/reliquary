// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `TreasureDungeonRecordType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:TreasureDungeonRecordType)
pub enum TreasureDungeonRecordType {
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_NONE)
    TREASURE_DUNGEON_RECORD_NONE = 0,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ADD_HP)
    TREASURE_DUNGEON_RECORD_ADD_HP = 1,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_SUB_HP)
    TREASURE_DUNGEON_RECORD_SUB_HP = 2,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE)
    TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE = 3,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ADD_ATTACK)
    TREASURE_DUNGEON_RECORD_ADD_ATTACK = 5,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ADD_DEFENCE)
    TREASURE_DUNGEON_RECORD_ADD_DEFENCE = 6,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ADD_EXPLORE)
    TREASURE_DUNGEON_RECORD_ADD_EXPLORE = 9,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_SUB_EXPLORE)
    TREASURE_DUNGEON_RECORD_SUB_EXPLORE = 10,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW)
    TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW = 11,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_SUMMON)
    TREASURE_DUNGEON_RECORD_SUMMON = 15,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_KILL)
    TREASURE_DUNGEON_RECORD_KILL = 16,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR)
    TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR = 20,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ADD_BUFF)
    TREASURE_DUNGEON_RECORD_ADD_BUFF = 24,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_UNLOCK_DOOR)
    TREASURE_DUNGEON_RECORD_UNLOCK_DOOR = 25,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE)
    TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE = 27,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN)
    TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN = 28,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE)
    TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE = 29,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN)
    TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN = 30,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL)
    TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL = 31,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS)
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS = 33,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL)
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL = 34,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE)
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE = 35,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID)
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID = 36,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM)
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM = 37,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_AVATAR_DEAD)
    TREASURE_DUNGEON_RECORD_AVATAR_DEAD = 40,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD)
    TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD = 41,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD)
    TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD = 42,
    // @@protoc_insertion_point(enum_value:TreasureDungeonRecordType.TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST)
    TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST = 43,
}

impl ::protobuf::Enum for TreasureDungeonRecordType {
    const NAME: &'static str = "TreasureDungeonRecordType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<TreasureDungeonRecordType> {
        match value {
            0 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_NONE),
            1 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_HP),
            2 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP),
            3 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE),
            5 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_ATTACK),
            6 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_DEFENCE),
            9 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE),
            10 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_EXPLORE),
            11 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW),
            15 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUMMON),
            16 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_KILL),
            20 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR),
            24 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_BUFF),
            25 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_UNLOCK_DOOR),
            27 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE),
            28 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN),
            29 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE),
            30 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN),
            31 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL),
            33 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS),
            34 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL),
            35 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE),
            36 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID),
            37 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM),
            40 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_AVATAR_DEAD),
            41 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD),
            42 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD),
            43 => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<TreasureDungeonRecordType> {
        match str {
            "TREASURE_DUNGEON_RECORD_NONE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_NONE),
            "TREASURE_DUNGEON_RECORD_ADD_HP" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_HP),
            "TREASURE_DUNGEON_RECORD_SUB_HP" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP),
            "TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE),
            "TREASURE_DUNGEON_RECORD_ADD_ATTACK" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_ATTACK),
            "TREASURE_DUNGEON_RECORD_ADD_DEFENCE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_DEFENCE),
            "TREASURE_DUNGEON_RECORD_ADD_EXPLORE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE),
            "TREASURE_DUNGEON_RECORD_SUB_EXPLORE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_EXPLORE),
            "TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW),
            "TREASURE_DUNGEON_RECORD_SUMMON" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUMMON),
            "TREASURE_DUNGEON_RECORD_KILL" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_KILL),
            "TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR),
            "TREASURE_DUNGEON_RECORD_ADD_BUFF" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_BUFF),
            "TREASURE_DUNGEON_RECORD_UNLOCK_DOOR" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_UNLOCK_DOOR),
            "TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE),
            "TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN),
            "TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE),
            "TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN),
            "TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL),
            "TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS),
            "TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL),
            "TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE),
            "TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID),
            "TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM),
            "TREASURE_DUNGEON_RECORD_AVATAR_DEAD" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_AVATAR_DEAD),
            "TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD),
            "TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD),
            "TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST" => ::std::option::Option::Some(TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [TreasureDungeonRecordType] = &[
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_NONE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_HP,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_ATTACK,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_DEFENCE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_EXPLORE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUMMON,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_KILL,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_BUFF,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_UNLOCK_DOOR,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_AVATAR_DEAD,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD,
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST,
    ];
}

impl ::protobuf::EnumFull for TreasureDungeonRecordType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("TreasureDungeonRecordType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_NONE => 0,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_HP => 1,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP => 2,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE => 3,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_ATTACK => 4,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_DEFENCE => 5,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE => 6,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUB_EXPLORE => 7,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW => 8,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SUMMON => 9,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_KILL => 10,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR => 11,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ADD_BUFF => 12,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_UNLOCK_DOOR => 13,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE => 14,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN => 15,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE => 16,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN => 17,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL => 18,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS => 19,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL => 20,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE => 21,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID => 22,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM => 23,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_AVATAR_DEAD => 24,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD => 25,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD => 26,
            TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST => 27,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for TreasureDungeonRecordType {
    fn default() -> Self {
        TreasureDungeonRecordType::TREASURE_DUNGEON_RECORD_NONE
    }
}

impl TreasureDungeonRecordType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<TreasureDungeonRecordType>("TreasureDungeonRecordType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x1fTreasureDungeonRecordType.proto*\xee\t\n\x19TreasureDungeonRecordT\
    ype\x12\x20\n\x1cTREASURE_DUNGEON_RECORD_NONE\x10\0\x12\"\n\x1eTREASURE_\
    DUNGEON_RECORD_ADD_HP\x10\x01\x12\"\n\x1eTREASURE_DUNGEON_RECORD_SUB_HP\
    \x10\x02\x12-\n)TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE\x10\x03\x12&\n\
    \"TREASURE_DUNGEON_RECORD_ADD_ATTACK\x10\x05\x12'\n#TREASURE_DUNGEON_REC\
    ORD_ADD_DEFENCE\x10\x06\x12'\n#TREASURE_DUNGEON_RECORD_ADD_EXPLORE\x10\t\
    \x12'\n#TREASURE_DUNGEON_RECORD_SUB_EXPLORE\x10\n\x120\n,TREASURE_DUNGEO\
    N_RECORD_ADD_EXPLORE_OVERFLOW\x10\x0b\x12\"\n\x1eTREASURE_DUNGEON_RECORD\
    _SUMMON\x10\x0f\x12\x20\n\x1cTREASURE_DUNGEON_RECORD_KILL\x10\x10\x12,\n\
    (TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR\x10\x14\x12$\n\x20TREASURE_DUN\
    GEON_RECORD_ADD_BUFF\x10\x18\x12'\n#TREASURE_DUNGEON_RECORD_UNLOCK_DOOR\
    \x10\x19\x12)\n%TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE\x10\x1b\x12(\n$TRE\
    ASURE_DUNGEON_RECORD_ENEMY_WEAKEN\x10\x1c\x12-\n)TREASURE_DUNGEON_RECORD\
    _ENEMY_AURA_REMOVE\x10\x1d\x12/\n+TREASURE_DUNGEON_RECORD_SPECIAL_MONSTE\
    R_RUN\x10\x1e\x120\n,TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL\x10\
    \x1f\x127\n3TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS\x10!\x12\
    4\n0TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL\x10\"\x123\n/TREASU\
    RE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE\x10#\x121\n-TREASURE_DUNGEON_R\
    ECORD_BATTLE_BUFF_OPEN_GRID\x10$\x120\n,TREASURE_DUNGEON_RECORD_BATTLE_B\
    UFF_ADD_ITEM\x10%\x12'\n#TREASURE_DUNGEON_RECORD_AVATAR_DEAD\x10(\x12-\n\
    )TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD\x10)\x12+\n'TREASURE_DUNGEON_\
    RECORD_ALL_AVATAR_DEAD\x10*\x12+\n'TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHE\
    ST\x10+b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(TreasureDungeonRecordType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
